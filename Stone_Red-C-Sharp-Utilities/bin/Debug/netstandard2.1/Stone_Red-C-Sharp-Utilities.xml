<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stone_Red-C-Sharp-Utilities</name>
    </assembly>
    <members>
        <member name="T:Stone_Red_Utilities.ArrListExtentions.TableStyle">
            <summary>
            Table Style
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.ArrListExtentions.TableStyle.Default">
            <summary>
            The default representaion of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.ArrListExtentions.TableStyle.Minimum">
            <summary>
            The minimal representation of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.ArrListExtentions.TableStyle.Alternative">
            <summary>
            The alternative representaion of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.ArrListExtentions.TableStyle.List">
            <summary>
            The list representaion of the table
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.ArrListExtentions.ArrayListExt">
            <summary>
            <see cref="T:System.Array"/> and <see cref="T:System.Collections.Generic.List`1"/> Extentions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.ArrListExtentions.ArrayListExt.Print(System.Array,System.Char,System.Boolean)">
            <summary>
            Prints items of array
            </summary>
            <param name="array"></param>
            <param name="delimiter"></param>
            <param name="printToDebugConsole"></param>
        </member>
        <member name="M:Stone_Red_Utilities.ArrListExtentions.ArrayListExt.Print``1(System.Collections.Generic.List{``0},System.Char,System.Boolean)">
            <summary>
            Prints items of list
            </summary>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="printToDebugConsole"></param>
        </member>
        <member name="M:Stone_Red_Utilities.ArrListExtentions.ArrayListExt.PrintTable``1(``0[0:,0:],Stone_Red_Utilities.ArrListExtentions.TableStyle)">
            <summary>
            Creates and prints table from 2D array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="tableStyle"></param>
        </member>
        <member name="T:Stone_Red_Utilities.BoolExtentions.BoolExt">
            <summary>
            <see cref="T:System.Boolean"/> Extentions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.OneWayTrue(System.Boolean@,System.Boolean)">
            <summary>
            Sets value to true if input is true. If input is false the value will not change.
            </summary>
            <param name="bol"></param>
            <param name="input"></param>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.OneWayFalse(System.Boolean@,System.Boolean)">
            <summary>
            Sets value to false if input is false. If input is true the value will not change.
            </summary>
            <param name="bol"></param>
            <param name="input"></param>
        </member>
        <member name="T:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt">
            <summary>
            Console Extentions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.Write(System.Object,System.ConsoleColor)">
            <summary>
            Writes the text representation of the specified object to the standard output stream.
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.WriteLine(System.Object,System.ConsoleColor)">
            <summary>
            Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogTarget">
            <summary>
            Specifies the severity of the log target.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.Console">
            <summary>
            Writes log to console
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.DebugConsole">
            <summary>
            Writes log to debug console
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.File">
            <summary>
            Writes log to file
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.ConsoleAndFile">
            <summary>
            Writes log to console and file
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.DebugAndFile">
            <summary>
            Writes log to debug console and file
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.All">
            <summary>
            Writes log to console debug console and file
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogSeverity">
            <summary>
            Specifies the severity of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Debug">
            <summary>
            Logs that contain the most detailed messages.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Info">
            <summary>
            Logs that track the general flow of the application.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Warning">
            <summary>
            Logs that highlight an abnormal activity in the flow of execution.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Error">
            <summary>
            Logs that highlight when the flow of execution is stopped due to a failure.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Fatal">
            <summary>
            Logs that contain the most severe level of error. This type of error indicate that immediate attention may be required.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.Logger">
            <summary>
            Class used for logging
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.Logger.ConsoleLogFormat">
            <summary>
            Format that is used when logging to the console
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.Logger.DebugConsoleLogFormat">
            <summary>
            Format that is used when logging to the debug console
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.Logger.FileLogFormat">
            <summary>
            Format that is used when logging to a file
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.#ctor(Stone_Red_Utilities.Logging.LogTarget,System.String,System.String)">
            <summary>
            Initializes the logger with the default format
            </summary>
            <param name="defaultFormat"></param>
            <param name="logTarg"></param>
            <param name="file"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.#ctor(Stone_Red_Utilities.Logging.LogTarget,System.String)">
            <summary>
            Initializes the logger with the default format
            </summary>
            <param name="defaultFormat"></param>
            <param name="logTarg"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.Log(System.String,System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output
            </summary>
            <param name="message"></param>
            <param name="source"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.LogIf(System.Boolean,System.String,System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output when the condition is met
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <param name="source"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.ClearLogFile">
            <summary>
            Clears log file
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.StringExtentions.StringExt">
            <summary>
            <see cref="T:System.String"/> Extentions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of upper and lower case.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreSpaces(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of spaces.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreSpacesAndCase(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of upper and lower case and spaces.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.ToFileName(System.String,System.Boolean)">
            <summary>
            Removes all invalid chars from file name
            </summary>
            <param name="str"></param>
            <param name="allowSpaces"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a string to the specified length.
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.Truncate(System.String,System.Int32,System.Boolean)">
            <summary>
            Truncates a string to the specified length.
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <param name="ellipsis"></param>
            <returns></returns>
        </member>
    </members>
</doc>
