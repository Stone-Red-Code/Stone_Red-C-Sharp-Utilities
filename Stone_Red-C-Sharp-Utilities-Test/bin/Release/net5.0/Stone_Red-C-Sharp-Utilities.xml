<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stone_Red-C-Sharp-Utilities</name>
    </assembly>
    <members>
        <member name="T:Stone_Red_Utilities.BoolExtentions.BoolExt">
            <summary>
            <see cref="T:System.Boolean"/> Extensions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.OneWayTrue(System.Boolean@,System.Boolean)">
            <summary>
            Sets value to true if input is true. If input is false the value will not change.
            </summary>
            <param name="bol"></param>
            <param name="input"></param>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.OneWayFalse(System.Boolean@,System.Boolean)">
            <summary>
            Sets value to false if input is false. If input is true the value will not change.
            </summary>
            <param name="bol"></param>
            <param name="input"></param>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.ToInt(System.Boolean)">
            <summary>
            Converts bool to int.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.BoolExtentions.BoolExt.FromInt(System.Boolean@,System.Int32)">
            <summary>
            Converts int to bool.
            </summary>
            <param name="bol"></param>
            <param name="input"></param>
        </member>
        <member name="T:Stone_Red_Utilities.CollectionExtentions.TableStyle">
            <summary>
            Table Style
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.CollectionExtentions.TableStyle.Default">
            <summary>
            The default representation of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.CollectionExtentions.TableStyle.Minimum">
            <summary>
            The minimal representation of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.CollectionExtentions.TableStyle.Alternative">
            <summary>
            The alternative representation of the table
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.CollectionExtentions.TableStyle.List">
            <summary>
            The list representation of the table
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.CollectionExtentions.CollectionExt">
            <summary>
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> and <see cref="T:System.Array"/> Extensions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.CollectionExtentions.CollectionExt.Print``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Boolean)">
            <summary>
            Prints all items of an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <param name="collection"></param>
            <param name="delimiter"></param>
            <param name="printToDebugConsole"></param>
        </member>
        <member name="M:Stone_Red_Utilities.CollectionExtentions.CollectionExt.PrintTable``1(``0[0:,0:],Stone_Red_Utilities.CollectionExtentions.TableStyle)">
            <summary>
            Creates and prints table from 2D array
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="tableStyle"></param>
        </member>
        <member name="T:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt">
            <summary>
            <see cref="T:System.Console"/> Extensions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.Write(System.Object,System.ConsoleColor)">
            <summary>
            Writes the text representation of the specified object to the standard output stream.
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.WriteLine(System.Object,System.ConsoleColor)">
            <summary>
            Writes the text representation of the specified object, followed by the current line terminator, to the standard output stream.
            </summary>
            <param name="value"></param>
            <param name="color"></param>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.Pause(System.ConsoleKey,System.String)">
            <summary>
            Suspends execution of the current method until the user presses a key
            </summary>
            <param name="key">The key that has to be pressed</param>
            <param name="message">The message that will be displayed</param>
        </member>
        <member name="M:Stone_Red_Utilities.ConsoleExtentions.ConsoleExt.Pause(System.String)">
            <summary>
            Suspends execution of the current method until the user presses a key
            </summary>
            <param name="message">The message that will be displayed</param>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle">
            <summary>
            Represents a rectangle
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.Length">
            <summary>
            The length of the <see cref="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.Width">
            <summary>
            The width of the <see cref="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.Diagonal">
            <summary>
            The diagonal of the <see cref="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.Area">
            <summary>
            The area of the <see cref="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.Perimeter">
            <summary>
            The perimeter of the <see cref="T:Stone_Red_Utilities.FluentMath.Shapes.Rectangle"/>
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Shapes.Rectangle.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new rectangle instance
            </summary>
            <param name="length">The length of the rectangle</param>
            <param name="width">The width of the rectangle</param>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.DecimalFluent">
            <summary>
            DecimalFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.ToDouble(System.Decimal)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.ToSingle(System.Decimal)">
            <summary>
            Converts number to <see cref="T:System.Single"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Single"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.ToInt16(System.Decimal)">
            <summary>
            Converts number to <see cref="T:System.Int16"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int16"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.ToInt32(System.Decimal)">
            <summary>
            Converts number to <see cref="T:System.Int32"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.ToInt64(System.Decimal)">
            <summary>
            Converts number to <see cref="T:System.Int64"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Add(System.Decimal,System.Decimal)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Subtract(System.Decimal,System.Decimal)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Multiply(System.Decimal,System.Decimal)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Divide(System.Decimal,System.Decimal)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Abs(System.Decimal)">
            <inheritdoc cref="M:System.Math.Abs(System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Ceiling(System.Decimal)">
            <inheritdoc cref="M:System.Math.Ceiling(System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Clamp(System.Decimal,System.Decimal,System.Decimal)">
            <inheritdoc cref="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Floor(System.Decimal)">
            <inheritdoc cref="M:System.Math.Floor(System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Round(System.Decimal)">
            <inheritdoc cref="M:System.Math.Round(System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Round(System.Decimal,System.MidpointRounding)">
            <inheritdoc cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Round(System.Decimal,System.Int32)">
            <inheritdoc cref="M:System.Math.Round(System.Decimal,System.Int32)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Round(System.Decimal,System.Int32,System.MidpointRounding)">
            <inheritdoc cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Sign(System.Decimal)">
            <inheritdoc cref="M:System.Math.Sign(System.Decimal)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DecimalFluent.Truncate(System.Decimal)">
            <inheritdoc cref="M:System.Math.Truncate(System.Decimal)"/>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.DoubleFluent">
            <summary>
            DoubleFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.ToDecimal(System.Double)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.ToSingle(System.Double)">
            <summary>
            Converts number to <see cref="T:System.Single"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Single"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.ToInt16(System.Double)">
            <summary>
            Converts number to <see cref="T:System.Int16"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int16"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.ToInt32(System.Double)">
            <summary>
            Converts number to <see cref="T:System.Int32"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.ToInt64(System.Double)">
            <summary>
            Converts number to <see cref="T:System.Int64"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Add(System.Double,System.Double)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Subtract(System.Double,System.Double)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Multiply(System.Double,System.Double)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Divide(System.Double,System.Double)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Abs(System.Double)">
            <inheritdoc cref="M:System.Math.Abs(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Acos(System.Double)">
            <inheritdoc cref="M:System.Math.Acos(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Acosh(System.Double)">
            <inheritdoc cref="M:System.Math.Acosh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Asin(System.Double)">
            <inheritdoc cref="M:System.Math.Asin(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Asinh(System.Double)">
            <inheritdoc cref="M:System.Math.Asinh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Atan(System.Double)">
            <inheritdoc cref="M:System.Math.Atan(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Atan2(System.Double,System.Double)">
            <inheritdoc cref="M:System.Math.Atan2(System.Double,System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Atanh(System.Double)">
            <inheritdoc cref="M:System.Math.Atanh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Cbrt(System.Double)">
            <inheritdoc cref="M:System.Math.Cbrt(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Ceiling(System.Double)">
            <inheritdoc cref="M:System.Math.Ceiling(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Clamp(System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:System.Math.Clamp(System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Cos(System.Double)">
            <inheritdoc cref="M:System.Math.Cos(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Cosh(System.Double)">
            <inheritdoc cref="M:System.Math.Cosh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Exp(System.Double)">
            <inheritdoc cref="M:System.Math.Exp(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Floor(System.Double)">
            <inheritdoc cref="M:System.Math.Floor(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.IEEERemainder(System.Double,System.Double)">
            <inheritdoc cref="M:System.Math.IEEERemainder(System.Double,System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Log(System.Double)">
            <inheritdoc cref="M:System.Math.Log(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Log(System.Double,System.Double)">
            <inheritdoc cref="M:System.Math.Log(System.Double,System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Log10(System.Double)">
            <inheritdoc cref="M:System.Math.Log10(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Pow(System.Double,System.Double)">
            <inheritdoc cref="M:System.Math.Pow(System.Double,System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Round(System.Double)">
            <inheritdoc cref="M:System.Math.Round(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Round(System.Double,System.MidpointRounding)">
            <inheritdoc cref="M:System.Math.Round(System.Double,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Round(System.Double,System.Int32)">
            <inheritdoc cref="M:System.Math.Round(System.Double,System.Int32)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Round(System.Double,System.Int32,System.MidpointRounding)">
            <inheritdoc cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Sign(System.Double)">
            <inheritdoc cref="M:System.Math.Sign(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Sin(System.Double)">
            <inheritdoc cref="M:System.Math.Sin(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Sinh(System.Double)">
            <inheritdoc cref="M:System.Math.Sinh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Sqrt(System.Double)">
            <inheritdoc cref="M:System.Math.Sqrt(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Tan(System.Double)">
            <inheritdoc cref="M:System.Math.Tan(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Tanh(System.Double)">
            <inheritdoc cref="M:System.Math.Tanh(System.Double)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.DoubleFluent.Truncate(System.Double)">
            <inheritdoc cref="M:System.Math.Truncate(System.Double)"/>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.Int16Fluent">
            <summary>
            IntegerFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.ToDecimal(System.Int16)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.ToSingle(System.Int16)">
            <summary>
            Converts number to <see cref="T:System.Single"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Single"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.ToDouble(System.Int16)">
            <summary>
            Converts number to <see cref="T:System.Double"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Double"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.ToInt32(System.Int16)">
            <summary>
            Converts number to <see cref="T:System.Int32"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.ToInt64(System.Int16)">
            <summary>
            Converts number to <see cref="T:System.Int64"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Add(System.Int16,System.Int16)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Subtract(System.Int16,System.Int16)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Multiply(System.Int16,System.Int16)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Divide(System.Int16,System.Int16)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Abs(System.Int16)">
            <inheritdoc cref="M:System.Math.Abs(System.Int16)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Clamp(System.Int16,System.Int16,System.Int16)">
            <inheritdoc cref="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int16Fluent.Sign(System.Int16)">
            <inheritdoc cref="M:System.Math.Sign(System.Int16)"/>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.Int32Fluent">
            <summary>
            IntegerFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.ToDecimal(System.Int32)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.ToSingle(System.Int32)">
            <summary>
            Converts number to <see cref="T:System.Single"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Single"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.ToDouble(System.Int32)">
            <summary>
            Converts number to <see cref="T:System.Double"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Double"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.ToInt16(System.Int32)">
            <summary>
            Converts number to <see cref="T:System.Int16"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int16"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.ToInt64(System.Int32)">
            <summary>
            Converts number to <see cref="T:System.Int64"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Add(System.Int32,System.Int32)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Subtract(System.Int32,System.Int32)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Multiply(System.Int32,System.Int32)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Divide(System.Int32,System.Int32)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Abs(System.Int32)">
            <inheritdoc cref="M:System.Math.Abs(System.Int32)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Clamp(System.Int32,System.Int32,System.Int32)">
            <inheritdoc cref="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int32Fluent.Sign(System.Int32)">
            <inheritdoc cref="M:System.Math.Sign(System.Int32)"/>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.Int64Fluent">
            <summary>
            IntegerFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.ToDecimal(System.Int64)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.ToSingle(System.Int64)">
            <summary>
            Converts number to <see cref="T:System.Single"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Single"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.ToDouble(System.Int64)">
            <summary>
            Converts number to <see cref="T:System.Double"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Double"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.ToInt16(System.Int64)">
            <summary>
            Converts number to <see cref="T:System.Int16"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int16"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.ToInt32(System.Int64)">
            <summary>
            Converts number to <see cref="T:System.Int32"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Add(System.Int64,System.Int64)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Subtract(System.Int64,System.Int64)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Multiply(System.Int64,System.Int64)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Divide(System.Int64,System.Int64)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Abs(System.Int64)">
            <inheritdoc cref="M:System.Math.Abs(System.Int64)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Clamp(System.Int64,System.Int64,System.Int64)">
            <inheritdoc cref="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.Int64Fluent.Sign(System.Int64)">
            <inheritdoc cref="M:System.Math.Sign(System.Int64)"/>
        </member>
        <member name="T:Stone_Red_Utilities.FluentMath.SingleFluent">
            <summary>
            FloatFluent class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.ToDecimal(System.Single)">
            <summary>
            Converts number to <see cref="T:System.Decimal"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.ToDouble(System.Single)">
            <summary>
            Converts number to <see cref="T:System.Double"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Double"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.ToInt16(System.Single)">
            <summary>
            Converts number to <see cref="T:System.Int16"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int16"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.ToInt32(System.Single)">
            <summary>
            Converts number to <see cref="T:System.Int32"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.ToInt64(System.Single)">
            <summary>
            Converts number to <see cref="T:System.Int64"/>
            </summary>
            <param name="num"></param>
            <returns>Number as <see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Add(System.Single,System.Single)">
            <summary>
            Adds the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Subtract(System.Single,System.Single)">
            <summary>
            Subtracts the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Multiply(System.Single,System.Single)">
            <summary>
            Multiples the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Divide(System.Single,System.Single)">
            <summary>
            Divides the two nums
            </summary>
            <param name="num"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Abs(System.Single)">
            <inheritdoc cref="M:System.MathF.Abs(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Acos(System.Single)">
            <inheritdoc cref="M:System.MathF.Acos(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Acosh(System.Single)">
            <inheritdoc cref="M:System.MathF.Acosh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Asin(System.Single)">
            <inheritdoc cref="M:System.MathF.Asin(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Asinh(System.Single)">
            <inheritdoc cref="M:System.MathF.Asinh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Atan(System.Single)">
            <inheritdoc cref="M:System.MathF.Atan(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Atan2(System.Single,System.Single)">
            <inheritdoc cref="M:System.MathF.Atan2(System.Single,System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Atanh(System.Single)">
            <inheritdoc cref="M:System.MathF.Atanh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Cbrt(System.Single)">
            <inheritdoc cref="M:System.MathF.Cbrt(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Ceiling(System.Single)">
            <inheritdoc cref="M:System.MathF.Ceiling(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Clamp(System.Single,System.Single,System.Single)">
            <inheritdoc cref="M:System.Math.Clamp(System.Single,System.Single,System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Cos(System.Single)">
            <inheritdoc cref="M:System.MathF.Cos(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Cosh(System.Single)">
            <inheritdoc cref="M:System.MathF.Cosh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Exp(System.Single)">
            <inheritdoc cref="M:System.MathF.Exp(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Floor(System.Single)">
            <inheritdoc cref="M:System.MathF.Floor(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.IEEERemainder(System.Single,System.Single)">
            <inheritdoc cref="M:System.MathF.IEEERemainder(System.Single,System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Log(System.Single)">
            <inheritdoc cref="M:System.MathF.Log(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Log(System.Single,System.Single)">
            <inheritdoc cref="M:System.MathF.Log(System.Single,System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Log10(System.Single)">
            <inheritdoc cref="M:System.MathF.Log10(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Pow(System.Single,System.Single)">
            <inheritdoc cref="M:System.MathF.Pow(System.Single,System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Round(System.Single)">
            <inheritdoc cref="M:System.MathF.Round(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Round(System.Single,System.MidpointRounding)">
            <inheritdoc cref="M:System.MathF.Round(System.Single,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Round(System.Single,System.Int32)">
            <inheritdoc cref="M:System.MathF.Round(System.Single,System.Int32)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Round(System.Single,System.Int32,System.MidpointRounding)">
            <inheritdoc cref="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Sign(System.Single)">
            <inheritdoc cref="M:System.MathF.Sign(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Sin(System.Single)">
            <inheritdoc cref="M:System.MathF.Sin(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Sinh(System.Single)">
            <inheritdoc cref="M:System.MathF.Sinh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Sqrt(System.Single)">
            <inheritdoc cref="M:System.MathF.Sqrt(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Tan(System.Single)">
            <inheritdoc cref="M:System.MathF.Tan(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Tanh(System.Single)">
            <inheritdoc cref="M:System.MathF.Tanh(System.Single)"/>
        </member>
        <member name="M:Stone_Red_Utilities.FluentMath.SingleFluent.Truncate(System.Single)">
            <inheritdoc cref="M:System.MathF.Truncate(System.Single)"/>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogConfig">
            <summary>
            Logging configuration.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.DebugConfig">
            <summary>
            The configuration for <see cref="F:Stone_Red_Utilities.Logging.LogSeverity.Debug"/> messages.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.InfoConfig">
            <summary>
            The configuration for <see cref="F:Stone_Red_Utilities.Logging.LogSeverity.Info"/> messages.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.WarnConfig">
            <summary>
            The configuration for <see cref="F:Stone_Red_Utilities.Logging.LogSeverity.Warn"/> messages.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.ErrorConfig">
            <summary>
            The configuration for <see cref="F:Stone_Red_Utilities.Logging.LogSeverity.Error"/> messages.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.FatalConfig">
            <summary>
            The configuration for <see cref="F:Stone_Red_Utilities.Logging.LogSeverity.Fatal"/> messages.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.LogConfig.FormatConfig">
            <summary>
            The configuration for the message format.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.OutputConfig">
            <summary>
            Output configuration.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.OutputConfig.Color">
            <summary>
            The console color of the log message.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.OutputConfig.LogTarget">
            <summary>
            The target for the log message.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.OutputConfig.FilePath">
            <summary>
            The log file path.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.FormatConfig">
            <summary>
            Format configuration.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.FormatConfig.DebugConsoleFormat">
            <summary>
            The format for the debug console.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.FormatConfig.ConsoleFormat">
            <summary>
            The format for the console.
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.FormatConfig.FileFormat">
            <summary>
            The format for the log file.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogFormatType">
            <summary>
             Specifies the info type of the log message format.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.DateTime">
            <summary>
            The <see cref="T:System.DateTime"/> of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.LogSeverity">
            <summary>
            The <see cref="T:Stone_Red_Utilities.Logging.LogSeverity"/> of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.LineNumber">
            <summary>
            The line number of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.FilePath">
            <summary>
            The file path of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.MemberName">
            <summary>
            The member name of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.Source">
            <summary>
            The source of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogFormatType.Message">
            <summary>
            The message of the log message.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.Logger">
            <summary>
            Class used for logging
            </summary>
        </member>
        <member name="P:Stone_Red_Utilities.Logging.Logger.Config">
            <summary>
            The logging configuration.
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.Log(System.String,System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output
            </summary>
            <param name="message"></param>
            <param name="source"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.Log(System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output
            </summary>
            <param name="message"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.LogIf(System.Boolean,System.String,System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output if the condition is met
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <param name="source"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.LogIf(System.Boolean,System.String,Stone_Red_Utilities.Logging.LogSeverity,System.String,System.String,System.Int32)">
            <summary>
            Log the message to the specified output if the condition is met
            </summary>
            <param name="condition"></param>
            <param name="message"></param>
            <param name="logSeverity"></param>
            <param name="memberName"></param>
            <param name="sourceFilePath"></param>
            <param name="sourceLineNumber"></param>
        </member>
        <member name="M:Stone_Red_Utilities.Logging.Logger.ClearLogFile(Stone_Red_Utilities.Logging.LogSeverity)">
            <summary>
            Clears the log file
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogSeverity">
            <summary>
            Specifies the severity of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Debug">
            <summary>
            Logs that contain the most detailed messages.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Info">
            <summary>
            Logs that track the general flow of the application.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Warn">
            <summary>
            Logs that highlight an abnormal activity in the flow of execution.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Error">
            <summary>
            Logs that highlight when the flow of execution is stopped due to a failure.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogSeverity.Fatal">
            <summary>
            Logs that contain the most severe level of error. This type of error indicate that immediate attention may be required.
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.Logging.LogTarget">
            <summary>
            Specifies the target of the log message.
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.Console">
            <summary>
            Writes log to console
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.DebugConsole">
            <summary>
            Writes log to debug console
            </summary>
        </member>
        <member name="F:Stone_Red_Utilities.Logging.LogTarget.File">
            <summary>
            Writes log to file
            </summary>
        </member>
        <member name="T:Stone_Red_Utilities.RandomExtentions.RandomExt">
            <summary>
            <see cref="T:System.Random"/> Extensions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.RandomExtentions.RandomExt.NextItem``1(System.Random,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an random item from the specified <paramref name="collection"/> using the <see cref="T:System.Random"/> class
            </summary>
            <typeparam name="T"></typeparam>
            <param name="random"></param>
            <param name="collection"></param>
            <returns>Returns a random item from the specified <paramref name="collection"/></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection" /> is <see langword="null" /></exception>
        </member>
        <member name="M:Stone_Red_Utilities.RandomExtentions.RandomExt.NextBool(System.Random)">
            <summary>
            Returns a random <see cref="T:System.Boolean"/> using the <see cref="T:System.Random" /> class
            </summary>
            <param name="random"></param>
            <returns>Returns <see langword="true" /> or <see langword="false"/></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="random" /> is <see langword="null" /></exception>
        </member>
        <member name="M:Stone_Red_Utilities.RandomExtentions.RandomExt.NextEnum``1(System.Random)">
            <summary>
            Returns a random item from the specified <see cref="T:System.Enum"/> using the <see cref="T:System.Random" /> class
            </summary>
            <typeparam name="T"></typeparam>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="T:Stone_Red_Utilities.Reflection.Reflection">
            <summary>
            Reflection class
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.Reflection.Reflection.CopyProperties``1(System.Object)">
            <summary>
            Copies all properties of an object to a new one.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.Reflection.Reflection.CopyProperties``1(System.Object,``0)">
            <summary>
            Copies all properties of an object to a different one.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="newObj"></param>
            <returns></returns>
        </member>
        <member name="T:Stone_Red_Utilities.StringExtentions.StringExt">
            <summary>
            <see cref="T:System.String"/> Extensions
            </summary>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of upper and lower case.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreSpaces(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of spaces.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.EqualsIgnoreSpacesAndCase(System.String,System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value regardless of upper and lower case and spaces.
            </summary>
            <param name="value"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.ToFileName(System.String,System.Boolean)">
            <summary>
            Removes all invalid chars from the specified <see cref="T:System.String"/>
            </summary>
            <param name="str"></param>
            <param name="allowSpaces"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.ToPath(System.String,System.Boolean)">
            <summary>
            Removes all invalid chars from the specified <see cref="T:System.String"/>
            </summary>
            <param name="str"></param>
            <param name="allowSpaces"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a <see cref="T:System.String"/> to the specified length.
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.Truncate(System.String,System.Int32,System.Boolean)">
            <summary>
            Truncates a <see cref="T:System.String"/> to the specified length.
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <param name="ellipsis"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.CorrectNewLine(System.String)">
            <summary>
            Uses the correct newline <see cref="T:System.String"/> defined for this environment.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.RemoveWhitespaces(System.String)">
            <summary>
            Removes all white spaces from the specified <see cref="T:System.String"/>
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Stone_Red_Utilities.StringExtentions.StringExt.Reverse(System.String)">
            <summary>
            Reverses the specified <see cref="T:System.String"/>
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
